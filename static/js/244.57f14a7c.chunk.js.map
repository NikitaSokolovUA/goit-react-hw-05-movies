{"version":3,"file":"static/js/244.57f14a7c.chunk.js","mappings":"8SACMA,EAAU,mCAEHC,EAAc,mCAAG,WAAOC,GAAP,+EACR,kDACZC,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQA,IALU,SASHI,EAAAA,GAAAA,IARL,kDAQ0BH,GATlB,cASpBI,EAToB,gBAUbA,EAASC,KAVI,mFAAH,sDAadC,EAAe,mCAAG,WAAOC,EAAOR,GAAd,2HAErBC,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTW,MAAOD,EACPR,OAAQA,IANW,SASJI,EAAAA,GAAAA,IATI,4CASkBH,GATlB,cASrBI,EATqB,gBAUdA,EAASC,KAVK,mFAAH,wDAafI,EAAO,mCAAG,WAAOC,EAAIC,GAAX,kFAEbC,EAFa,6CAEsCF,GACnDV,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQY,EAAWZ,SANR,SASII,EAAAA,GAAAA,IAAUS,EAAYZ,GAT1B,cASbI,EATa,gBAUNA,EAASC,KAVH,mFAAH,wDAcPQ,EAAO,mCAAG,WAAOH,EAAIC,GAAX,kFAEbC,EAFa,6CAEsCF,EAFtC,aAGbV,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQY,EAAWZ,SANR,SASII,EAAAA,GAAAA,IAAUS,EAAYZ,GAT1B,cASbI,EATa,gBAUNA,EAASC,KAVH,mFAAH,wDAcPS,EAAU,mCAAG,WAAOJ,EAAIC,GAAX,kFAEhBC,EAFgB,6CAEmCF,EAFnC,YAGhBV,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQY,EAAWZ,SANL,SASCI,EAAAA,GAAAA,IAAUS,EAAYZ,GATvB,cAShBI,EATgB,gBAUTA,EAASC,KAVA,mFAAH,uD,4JCvDVU,EAASC,EAAAA,EAAAA,GAAH,0JAUNC,EAAaD,EAAAA,EAAAA,EAAH,qE,SCiCvB,EAxCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMZ,EAAa,IAAIa,gBAEjBC,EAAU,mCAAG,8GAEQX,EAAAA,EAAAA,IAAWO,EAASV,GAF5B,OAETP,EAFS,OAGfgB,EAAWhB,EAASsB,SAHL,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAWhB,OAFAH,IAEO,kBAAMd,EAAWkB,OAAjB,CACR,GAAE,CAACR,KAGF,wBACsB,IAAnBF,EAAQW,OACPX,EAAQY,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,UAACnB,EAAD,YACE,wBAAKiB,KACL,uBAAIC,KACJ,SAAChB,EAAD,UAAaiB,MAHFxB,EADH,KAQZ,SAACK,EAAD,WACE,+CAKT,C","sources":["apiMovies.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = '4c1081d23ec0123139ed5dd8633262bc'\n\nexport const apiTrendMovies = async (signal) => {\n    const TREND_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: signal\n        }\n    }\n\n    const responce = await axios.get(TREND_URL, options)\n    return await responce.data\n}\n\nexport const apiByNameMovies = async (movie, signal) => {\n    const SEARCH_URL = `https://api.themoviedb.org/3/search/movie`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query: movie ,\n            signal: signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n}\n\nexport const apiById = async (id, controller) => {\n\n    const SEARCH_URL = `https://api.themoviedb.org/3/movie/${id}`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: controller.signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n  \n}\n\nexport const apiCast = async (id, controller) => {   \n\n    const SEARCH_URL = `https://api.themoviedb.org/3/movie/${id}/credits?`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: controller.signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n  \n}\n\nexport const apiReviews = async (id, controller) => {   \n\n    const SEARCH_URL = `https://api.themoviedb.org/3/movie/${id}/reviews`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: controller.signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n  \n}\n\n","import styled from '@emotion/styled';\n\nexport const Review = styled.li`\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 10px 30px;\n\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const DateUpdate = styled.p`\n  text-align: right;\n  margin-right: 50px;\n`;\n","import { apiReviews } from 'apiMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DateUpdate, Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getReviews = async () => {\n      try {\n        const responce = await apiReviews(movieId, controller);\n        setReviews(responce.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getReviews();\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, author, content, updated_at }) => (\n          <Review key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n            <DateUpdate>{updated_at}</DateUpdate>\n          </Review>\n        ))\n      ) : (\n        <Review>\n          <p>Sorry no Reviews</p>\n        </Review>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","apiTrendMovies","signal","options","params","api_key","axios","responce","data","apiByNameMovies","movie","query","apiById","id","controller","SEARCH_URL","apiCast","apiReviews","Review","styled","DateUpdate","useState","reviews","setReviews","movieId","useParams","useEffect","AbortController","getReviews","results","console","log","abort","length","map","author","content","updated_at"],"sourceRoot":""}