{"version":3,"file":"static/js/93.0df12932.chunk.js","mappings":"6SACMA,EAAU,mCAEHC,EAAc,mCAAG,WAAOC,GAAP,+EACR,kDACZC,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQA,IALU,SASHI,EAAAA,GAAAA,IARL,kDAQ0BH,GATlB,cASpBI,EAToB,gBAUbA,EAASC,KAVI,mFAAH,sDAadC,EAAe,mCAAG,WAAOC,EAAOR,GAAd,2HAErBC,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTW,MAAOD,EACPR,OAAQA,IANW,SASJI,EAAAA,GAAAA,IATI,4CASkBH,GATlB,cASrBI,EATqB,gBAUdA,EAASC,KAVK,mFAAH,wDAafI,EAAO,mCAAG,WAAOC,EAAIC,GAAX,kFAEbC,EAFa,6CAEsCF,GACnDV,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQY,EAAWZ,SANR,SASII,EAAAA,GAAAA,IAAUS,EAAYZ,GAT1B,cASbI,EATa,gBAUNA,EAASC,KAVH,mFAAH,wDAcPQ,EAAO,mCAAG,WAAOH,EAAIC,GAAX,kFAEbC,EAFa,6CAEsCF,EAFtC,aAGbV,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQY,EAAWZ,SANR,SASII,EAAAA,GAAAA,IAAUS,EAAYZ,GAT1B,cASbI,EATa,gBAUNA,EAASC,KAVH,mFAAH,wDAcPS,EAAU,mCAAG,WAAOJ,EAAIC,GAAX,kFAEhBC,EAFgB,6CAEmCF,EAFnC,YAGhBV,EAAU,CACZC,OAAQ,CACJC,QAASL,EACTE,OAAQY,EAAWZ,SANL,SASCI,EAAAA,GAAAA,IAAUS,EAAYZ,GATvB,cAShBI,EATgB,gBAUTA,EAASC,KAVA,mFAAH,uD,iKCvDVU,EAAYC,EAAAA,EAAAA,GAAH,mLAUTC,EAAaD,EAAAA,EAAAA,GAAH,wGAOVE,EAAaF,EAAAA,EAAAA,IAAH,2DAKVG,EAAaH,EAAAA,EAAAA,GAAH,uIAQVI,EAAYJ,EAAAA,EAAAA,EAAH,wG,SCgCtB,EAnDa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMf,EAAa,IAAIgB,gBAEjBC,EAAS,mCAAG,8GAESf,EAAAA,EAAAA,IAAQW,EAASb,GAF1B,OAERP,EAFQ,OAGdmB,EAAUnB,EAASyB,MAHL,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAWf,OAFAH,IAEO,kBAAMjB,EAAWqB,OAAjB,CACR,GAAE,CAACR,KAGF,iCACE,SAACT,EAAD,qBACCO,IACC,SAACL,EAAD,UACGK,EAAOW,KAAI,YAAqD,IAAlDvB,EAAiD,EAAjDA,GAAIwB,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9C,OACE,0BACGF,GACC,SAAChB,EAAD,CACEmB,IAAG,UAjCH,mCAiCG,OAAmBH,GACtBI,IAAKH,KAGP,SAACjB,EAAD,CACEmB,IAAI,sCACJC,IAAI,MAGR,SAACnB,EAAD,UAAagB,KACb,SAACf,EAAD,UAAYgB,MAbL1B,EAgBZ,QAKV,C","sources":["apiMovies.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = '4c1081d23ec0123139ed5dd8633262bc'\n\nexport const apiTrendMovies = async (signal) => {\n    const TREND_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: signal\n        }\n    }\n\n    const responce = await axios.get(TREND_URL, options)\n    return await responce.data\n}\n\nexport const apiByNameMovies = async (movie, signal) => {\n    const SEARCH_URL = `https://api.themoviedb.org/3/search/movie`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            query: movie ,\n            signal: signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n}\n\nexport const apiById = async (id, controller) => {\n\n    const SEARCH_URL = `https://api.themoviedb.org/3/movie/${id}`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: controller.signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n  \n}\n\nexport const apiCast = async (id, controller) => {   \n\n    const SEARCH_URL = `https://api.themoviedb.org/3/movie/${id}/credits?`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: controller.signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n  \n}\n\nexport const apiReviews = async (id, controller) => {   \n\n    const SEARCH_URL = `https://api.themoviedb.org/3/movie/${id}/reviews`\n    const options = {\n        params: {\n            api_key: API_KEY,\n            signal: controller.signal\n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n  \n}\n\n","import styled from '@emotion/styled';\n\nexport const CastTitle = styled.h2`\n  margin-top: 30px;\n  color: grey;\n  text-transform: uppercase;\n  font-family: Roboto;\n  font-weight: 700;\n  font-size: 30px;\n  text-align: center;\n`;\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const ActorImage = styled.img`\n  width: 200px;\n  height: 300px;\n`;\n\nexport const ActorTitle = styled.h3`\n  font-weight: 700;\n  font-size: 16px;\n  color: black;\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nexport const Character = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  color: grey;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { apiCast } from 'apiMovies';\nimport {\n  ActorImage,\n  ActorsList,\n  ActorTitle,\n  CastTitle,\n  Character,\n} from './Cast.styled';\n\nconst DEFAULT_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const apiActors = async () => {\n      try {\n        const responce = await apiCast(movieId, controller);\n        setActors(responce.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    apiActors();\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      <CastTitle>ACTORS</CastTitle>\n      {actors && (\n        <ActorsList>\n          {actors.map(({ id, profile_path, original_name, character }) => {\n            return (\n              <li key={id}>\n                {profile_path ? (\n                  <ActorImage\n                    src={`${DEFAULT_URL}${profile_path}`}\n                    alt={original_name}\n                  />\n                ) : (\n                  <ActorImage\n                    src=\"https://via.placeholder.com/250x200\"\n                    alt=\"\"\n                  />\n                )}\n                <ActorTitle>{original_name}</ActorTitle>\n                <Character>{character}</Character>\n              </li>\n            );\n          })}\n        </ActorsList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","apiTrendMovies","signal","options","params","api_key","axios","responce","data","apiByNameMovies","movie","query","apiById","id","controller","SEARCH_URL","apiCast","apiReviews","CastTitle","styled","ActorsList","ActorImage","ActorTitle","Character","useState","actors","setActors","movieId","useParams","useEffect","AbortController","apiActors","cast","console","log","abort","map","profile_path","original_name","character","src","alt"],"sourceRoot":""}