{"version":3,"file":"static/js/730.26ca1884.chunk.js","mappings":"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","sources":["apiMovies.js","components/Home/Home.style.jsx","components/Movies/Movies.styled.jsx","components/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = '4c1081d23ec0123139ed5dd8633262bc'\n\nexport const apiTrendMovies = async (signal) => {\n    const TREND_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const options = {\n        signal: signal,\n        params: {\n            api_key: API_KEY,            \n        }\n    }\n\n    const responce = await axios.get(TREND_URL, options)\n    return await responce.data\n}\n\nexport const apiByNameMovies = async (movie, signal) => {\n    const SEARCH_URL = `https://api.themoviedb.org/3/search/movie`\n    const options = {\n        signal: signal,\n        params: {\n            api_key: API_KEY,\n            query: movie ,\n            \n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n}\n\nexport const apiById = async (id, controller) => {\n\n    const SEARCH_BY_ID = `https://api.themoviedb.org/3/movie/${id}`\n    const options = {\n        signal: controller.signal,\n        params: {\n            api_key: API_KEY,\n            \n        }\n    }    \n    const responce = await axios.get(SEARCH_BY_ID, options)   \n    return await responce.data\n  \n}\n\nexport const apiCast = async (id,controller) => {   \n\n  \n\n    const SEARCH_CAST = `https://api.themoviedb.org/3/movie/${id}/credits?`\n    const options = {\n        signal: controller.signal,\n        params: {\n            api_key: API_KEY,\n            \n        }\n    }    \n    const responce = await axios.get(SEARCH_CAST, options)   \n    return await responce.data\n  \n}\n\nexport const apiReviews = async (id, controller) => {   \n\n    const SEARCH_REVIEWS = `https://api.themoviedb.org/3/movie/${id}/reviews`\n    const options = {\n         signal: controller.signal,\n        params: {\n            api_key: API_KEY,\n           \n        }\n    }    \n    const responce = await axios.get(SEARCH_REVIEWS, options)   \n    return await responce.data\n  \n}\n\n","import styled from '@emotion/styled';\n\nexport const TrendTitle = styled.h1`\n  text-align: center;\n  font-size: 44px;\n  line-height: 1.36;\n  text-transform: uppercase;\n`;\n\nexport const FilmTitle = styled.h2`\n  text-align: center;\n  font-size: 25px;\n  line-height: 1.11;\n  text-transform: uppercase;\n  color: black;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #2196f3;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { GrFormSearch } from 'react-icons/gr';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  border: 1px solid black;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nexport const Icon = styled(GrFormSearch)`\n  width: 34px;\n  height: 34px;\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  color: black;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n  Icon,\n} from './Movies.styled';\nimport { apiByNameMovies } from 'apiMovies';\nimport { FilmTitle } from 'components/Home/Home.style';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [input, setInput] = useState('');\n  const [searchFilms, setSearchFilms] = useState(\n    JSON.parse(localStorage.getItem('search')) || null\n  );\n  const location = useLocation();\n\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const controller = new AbortController();\n\n    try {\n      const searchName = await apiByNameMovies(input, controller.signal);\n      setSearchFilms(searchName.results);\n      localStorage.setItem('search', JSON.stringify(searchName.results));\n    } catch (error) {\n      console.log(error);\n    }\n    setInput('');\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton>\n          <Icon />\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          name=\"inputValue\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          value={input}\n          onChange={handleInputChange}\n        />\n      </SearchForm>\n\n      {searchFilms && (\n        <ul>\n          {searchFilms.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location.pathname }}>\n                <FilmTitle>{title}</FilmTitle>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n\nMovies.propTypes = {\n  path: PropTypes.string.isRequired,\n};\n"],"names":["API_KEY","apiTrendMovies","signal","options","params","api_key","axios","responce","data","apiByNameMovies","movie","query","apiById","id","controller","SEARCH_BY_ID","apiCast","SEARCH_CAST","apiReviews","SEARCH_REVIEWS","TrendTitle","styled","FilmTitle","SearchForm","SearchFormButton","Icon","GrFormSearch","SearchFormButtonLabel","SearchFormInput","useState","input","setInput","JSON","parse","localStorage","getItem","searchFilms","setSearchFilms","location","useLocation","handleSubmit","e","preventDefault","AbortController","searchName","results","setItem","stringify","console","log","onSubmit","type","name","autocomplete","autoFocus","placeholder","value","onChange","target","map","title","to","state","from","pathname"],"sourceRoot":""}