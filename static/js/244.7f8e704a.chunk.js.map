{"version":3,"file":"static/js/244.7f8e704a.chunk.js","mappings":"8SACMA,EAAU,mCAEHC,EAAc,mCAAG,WAAOC,GAAP,+EACR,kDACZC,EAAU,CACZD,OAAQA,EACRE,OAAQ,CACJC,QAASL,IALS,SASHM,EAAAA,GAAAA,IARL,kDAQ0BH,GATlB,cASpBI,EAToB,gBAUbA,EAASC,KAVI,mFAAH,sDAadC,EAAe,mCAAG,WAAOC,EAAOR,GAAd,2HAErBC,EAAU,CACZD,OAAQA,EACRE,OAAQ,CACJC,QAASL,EACTW,MAAOD,IANY,SAUJJ,EAAAA,GAAAA,IAVI,4CAUkBH,GAVlB,cAUrBI,EAVqB,gBAWdA,EAASC,KAXK,mFAAH,wDAcfI,EAAO,mCAAG,WAAOC,EAAIC,GAAX,kFAEbC,EAFa,6CAEwCF,GACrDV,EAAU,CACZD,OAAQY,EAAWZ,OACnBE,OAAQ,CACJC,QAASL,IANE,SAUIM,EAAAA,GAAAA,IAAUS,EAAcZ,GAV5B,cAUbI,EAVa,gBAWNA,EAASC,KAXH,mFAAH,wDAePQ,EAAO,mCAAG,WAAOH,EAAGC,GAAV,kFAIbG,EAJa,6CAIuCJ,EAJvC,aAKbV,EAAU,CACZD,OAAQY,EAAWZ,OACnBE,OAAQ,CACJC,QAASL,IARE,SAYIM,EAAAA,GAAAA,IAAUW,EAAad,GAZ3B,cAYbI,EAZa,gBAaNA,EAASC,KAbH,mFAAH,wDAiBPU,EAAU,mCAAG,WAAOL,EAAIC,GAAX,kFAEhBK,EAFgB,6CAEuCN,EAFvC,YAGhBV,EAAU,CACXD,OAAQY,EAAWZ,OACpBE,OAAQ,CACJC,QAASL,IANK,SAUCM,EAAAA,GAAAA,IAAUa,EAAgBhB,GAV3B,cAUhBI,EAVgB,gBAWTA,EAASC,KAXA,mFAAH,uD,4JC5DVY,EAASC,EAAAA,EAAAA,GAAH,0JAUNC,EAAaD,EAAAA,EAAAA,EAAH,qE,SCmCvB,EA1CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAqBR,OAnBAE,EAAAA,EAAAA,YAAU,WACR,IAAMd,EAAa,IAAIe,gBAEjBC,EAAU,mCAAG,8GAEQZ,EAAAA,EAAAA,IAAWQ,EAASZ,GAF5B,OAETP,EAFS,OAGfkB,EAAWlB,EAASwB,SAHL,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAWhB,OAFAH,IAEO,WACLhB,EAAWoB,OACZ,CACF,GAAE,CAACR,KAGF,wBACsB,IAAnBF,EAAQW,OACPX,EAAQY,KAAI,gBAAGvB,EAAH,EAAGA,GAAIwB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,WAAxB,OACV,UAACnB,EAAD,YACE,wBAAKiB,KACL,uBAAIC,KACJ,SAAChB,EAAD,UAAaiB,MAHF1B,EADH,KAQZ,SAACO,EAAD,WACE,+CAKT,C","sources":["apiMovies.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\nconst API_KEY = '4c1081d23ec0123139ed5dd8633262bc'\n\nexport const apiTrendMovies = async (signal) => {\n    const TREND_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n    const options = {\n        signal: signal,\n        params: {\n            api_key: API_KEY,            \n        }\n    }\n\n    const responce = await axios.get(TREND_URL, options)\n    return await responce.data\n}\n\nexport const apiByNameMovies = async (movie, signal) => {\n    const SEARCH_URL = `https://api.themoviedb.org/3/search/movie`\n    const options = {\n        signal: signal,\n        params: {\n            api_key: API_KEY,\n            query: movie ,\n            \n        }\n    }    \n    const responce = await axios.get(SEARCH_URL, options)   \n    return await responce.data\n}\n\nexport const apiById = async (id, controller) => {\n\n    const SEARCH_BY_ID = `https://api.themoviedb.org/3/movie/${id}`\n    const options = {\n        signal: controller.signal,\n        params: {\n            api_key: API_KEY,\n            \n        }\n    }    \n    const responce = await axios.get(SEARCH_BY_ID, options)   \n    return await responce.data\n  \n}\n\nexport const apiCast = async (id,controller) => {   \n\n  \n\n    const SEARCH_CAST = `https://api.themoviedb.org/3/movie/${id}/credits?`\n    const options = {\n        signal: controller.signal,\n        params: {\n            api_key: API_KEY,\n            \n        }\n    }    \n    const responce = await axios.get(SEARCH_CAST, options)   \n    return await responce.data\n  \n}\n\nexport const apiReviews = async (id, controller) => {   \n\n    const SEARCH_REVIEWS = `https://api.themoviedb.org/3/movie/${id}/reviews`\n    const options = {\n         signal: controller.signal,\n        params: {\n            api_key: API_KEY,\n           \n        }\n    }    \n    const responce = await axios.get(SEARCH_REVIEWS, options)   \n    return await responce.data\n  \n}\n\n","import styled from '@emotion/styled';\n\nexport const Review = styled.li`\n  border: 1px solid black;\n  border-radius: 5px;\n  padding: 10px 30px;\n\n  :not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const DateUpdate = styled.p`\n  text-align: right;\n  margin-right: 50px;\n`;\n","import { apiReviews } from 'apiMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DateUpdate, Review } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const getReviews = async () => {\n      try {\n        const responce = await apiReviews(movieId, controller);\n        setReviews(responce.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getReviews();\n\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, author, content, updated_at }) => (\n          <Review key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n            <DateUpdate>{updated_at}</DateUpdate>\n          </Review>\n        ))\n      ) : (\n        <Review>\n          <p>Sorry no Reviews</p>\n        </Review>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","apiTrendMovies","signal","options","params","api_key","axios","responce","data","apiByNameMovies","movie","query","apiById","id","controller","SEARCH_BY_ID","apiCast","SEARCH_CAST","apiReviews","SEARCH_REVIEWS","Review","styled","DateUpdate","useState","reviews","setReviews","movieId","useParams","useEffect","AbortController","getReviews","results","console","log","abort","length","map","author","content","updated_at"],"sourceRoot":""}